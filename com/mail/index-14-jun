*********
* HADES *  printout  from database    at  10:16:45 14-Jun-82.

*********

*********  Ring Mail Program



******************  Index  ******************
******************  Index  ******************
******************  Index  ******************


Hdr  Header file                                                  (Header)
*BR  MAINCODE- The generally used code
.    BCP  MAIN    - The command loop (Two versions)                    (bcp.main)
.    BCP  SEND    - Interactive send module (Two versions)             (bcp.send)
.    BCP  COMMAND - The command interfaces to the basic commands       (bcp.command)
.    BCP  UTIL    - Useful bits and pieces                             (bcp.util)
.    BCP  UMMD    - Access to UM and MD                                (bcp.ummd)
.    BCP  REPORT  - find file output, and post to z80                  (bcp.report)
.    BCP  MAIL    - Decode MD into store; print headers                (bcp.mail)
.    BCP  FSINPUT - Fullscreen input pseudostream                      (bcp.fsinput)
.    BCP  GROUPS  - Manipulate distribution groups                     (bcp.groups)
.    BCP  RDFORM  - Read a form (ALSO GOT BY SEND)                     (bcp.rdform)
.    BCP  READLIN - Read a line, reflecting.                           (bcp.readlin)
.    BCP  FS      - All FS interaction                                 (bcp.fs)
*BR  TRIPOS  - Commands RMAIL, RSEND and RMESSAGE
.    BCP  RMAIL                                                        (bcp.rmail)
.    BCP  RSEND                                                        (bcp.rsend)
.    BCP  RMESSAGE                                                     (bcp.rmessage)
.    BCP  R        (LSI4s are small ...)                               (bcp.r)
*BR  Dynamic - For Dynamic mailserver only
.    BCP  MSINIT  - Start it all up ...                                (bcp.msinit)
.    BCP  LOGON   - Check PW etc                                       (bcp.logon)
.    BCP  VT      - My VT handler. Always in SC mode. BREAK-B returns  (bcp.vt)
.    BCP  TRACE   - tracing code and ANALYSE                           (bcp.trace)
.    BCP  (ANALYSE- New code to do both TRACE and COMPRES)             (bcp.analyse)
*BR  Demons  - SENDER, COMPRES and DINIT
.    BCP  DINIT   - starts up the demon                                (bcp.dinit)
.    BCP  SENDER  - The send demon                                     (bcp.sender)
.    BCP  COMPRES - The compress demon. Runs dayly to delete mail      (bcp.compres)
*BR  Got stuf-
.    BCP  BACICFS    -                                                 (bcp.basicfs)
.    BCP  BASICUTIL  -                                                 (bcp.basicutil)
.    BCP  Find-key   -                                                 (bcp.find-key)
.    BCP  Convertpuid-                                                 (BCP.convertpuid)
.    BCP  convertname-                                                 (bcp.convertname)
.    BCP  Z80send    -                                                 (bcp.z80send)
.    BCP  printheader-                                                 (bcp.printheader)
.    BCP  sspfindpuid-                                                 (bcp.sspfindpuid)
*BR  Dummy   - Stubs of NEEDS
.    BCP  SERVER  -                                                    (bcp.server)
.    BCP  COM     - The MAIL command itself                            (bcp.com)
.    BCP  COM-1   - LSI4s can only manage little bits!                 (bcp.com-1)
.    BCP  COM-2   -        ( the other half  )                         (bcp.com-2)
.    BCP  DEMON   -                                                    (bcp.demon)
*BR  Support - Utility routines
.    BCP  STARTDEMON - start a demon running                           (bcp.startdemon)
*BR  COMMAND - sequences
.    Cmd  MAKE  - C S.MAKE [68000|LSI4] [DEST=dir.]                    (s.make)
.    Cmd  BCP   - C S.BCP <file> [ws=20000] [sl]  -  recompile a modu  (s.bcp)
.    Cmd  BCP-C - BCP the COMMAND version into C<file> (MAIN, SEND)    (s.bcp-c)
.    Cmd  LINK  - C S.LINK <program>  - Link a program into MOBJ:N     (s.link)

