./HADES START TRIPOS
./HADES NODES
add Y "The BCP compiler"
down L
add Y "ROOT - MST and OVL"
down L
add N "bcp-mst" "s.bcp-mst" "c   "
add N "MST - The master routine" "bcp.mst" "BCP "
add N "OVL - Load an overlay from a file" "bcp.ovl" "BCP "
add N "NOVL- Load an overlay from the overlay file" "bcp.novl" "BCP "
up
add Y "ERR"
down L
add N "bcp-err BCP and section and relink" "s.bcp-err" "c   "
add N "FAT Fatal Error" "bcp.fat" "BCP "
add N "SML Is a value immediate data, or a pointer to a node ?" "bcp.sml" "BCP "
add N "FEP Decode parameters" "bcp.fep" "BCP "
add N "NSW read a switch" "bcp.nsw" "BCP "
add N "SYE Error in SYN pass" "bcp.sye" "BCP "
add N "TRE Error in TRN pass" "bcp.tre" "BCP "
add N "LOG (GOT in MST)" "bcp.log" "BCP "
add N "TWF (GOT in MST)" "bcp.twf" "BCP "
up
add Y "SYN"
down L
add N "SML  Is a number small (i.e. a tree item or immediate ?)" "bcp.sml" "BCP "
add N "SYN1 Nextsymb, skip commants/conditional compilation" "bcp.syn1" "BCP "
add N "SYN2 Setup reserved words - Ignore commnets/cond comp" "bcp.syn2" "BCP "
add N "SYN3 Read simple items" "bcp.syn3" "BCP "
add N "SYN4 Formtree (Entrypoint) - Lists - More '$' - Synreport" "bcp.syn4" "BCP "
add N "SYN5 The bigger reads (blockbody, seq, defs, sect ...)" "bcp.syn5" "BCP "
add N "SYN6 Read expressions (rbexp, rexplist, rdef)" "bcp.syn6" "BCP "
add N "SYN7 Rbcom, Rcom (High level, e.g. SWITCHON, FOR)" "bcp.syn7" "BCP "
add N "GET  as in GET " "bcp.get" "BCP "
up
add Y "TRN"
down L
add N "bcp-TRN Make one section and relink" "s.bcp-trn" "c   "
add N "TRN1 COMPLILEAE" "bcp.trn1" "BCP "
add N "TRN2 Trans" "bcp.trn2" "BCP "
add N "TRN3 Decls, names, transdefs" "bcp.trn3" "BCP "
add N "TRN4 Jumpcond, Switch, For" "bcp.trn4" "BCP "
add N "TRN5 Optimised Load. Evaltree. *** BEWARE ***" "bcp.trn5" "BCP "
add N "TRN6 Evalconst, assign, transname, getv, SLCT" "bcp.trn6" "BCP "
add N "TRN7 Ocode generation" "bcp.trn7" "BCP "
add N "make-TRN Remake TRN and relink" "s.make-trn" "c   "
up
add Y "MCG"
down L
add N "bcp-mcg - Make a single element" "s.bcp-mcg" "c   "
add N "MCG1 ..." "bcp.mcg1" "BCP "
add N "MCG2 Scan" "bcp.mcg2" "BCP "
add N "MCG3 Cgpendingop" "bcp.mcg3" "BCP "
add N "MCG4 Cgdyadic, reg manipulation, loadt, slct, move" "bcp.mcg4" "BCP "
add N "MCG5 Cgrv, cgglobal, cgentry, cgsave, condjump" "bcp.mcg5" "BCP "
add N "MCG6 ..." "bcp.mcg6" "BCP "
add N "MCG7 ..." "bcp.mcg7" "BCP "
add N "MCG8 Output a section" "bcp.mcg8" "BCP "
add N "MCG2 REAL" "bcp.ssp-1-mcg2" "BCP "
add N "MCG7 1" "bcp.ssp-1-mcg7" "BCP1"
add N "make-mcg Make the lot (NB ssp-1-mcg!)" "s.make-mcg" "c   "
add N "bcp-1mcg" "s.bcp-1mcg" "c1  "
up
add Y "LCG"
down L
add N "LCG1 Start, collapse, cgsects, reading, CGERROR" "bcp.lcg1" "BCPO"
add N "LCG2 Scan" "bcp.lcg2" "BCP "
add N "LCG3 Pendingop, Cgdyadic, Evalconst, all the nasties !!" "bcp.lcg3" "BCP "
add N "LCG4 Register shuffling" "bcp.lcg4" "BCP "
add N "LCG5 Load, store, put/get byte" "bcp.lcg5" "BCP "
add N "LCG6 Generate statics, globals, strings, tables etc." "bcp.lcg6" "BCP "
add N "LCG7 Entry, Save, Apply" "bcp.lcg7" "BCP "
add N "LCG8 Switchon" "bcp.lcg8" "BCP "
add N "LCG9 Code, gen" "bcp.lcg9" "BCP "
add N "LCG10 Labels, refrences, constants" "bcp.lcg10" "BCP "
add N "LCG11 Output a section" "bcp.lcg11" "BCP "
up
add Y "Header files"
down L
add N "COMHDR  General header ...." "comhdr" "Hdr "
add N "ROOTHDR Stuff for ROOT modules" "roothdr" "Hdr "
add N "ERRHDR  Stuff for ERR modules" "errhdr" "Hdr "
add N "SYNHDR  SYN stuff" "synhdr" "Hdr "
add N "AEHDR   Manifest for AE tree" "aehdr" "Hdr "
add N "AEOCHDR Parts common to AE tree and OCODE" "aeochdr" "Hdr "
add N "STHDR   Stuff common to SYN and TRN (Globals)" "sthdr" "Hdr "
add N "TRNHDR  Stuff for TRN modules" "trnhdr" "Hdr "
add N "TCHDR   Stuff common to TRN and CG (Globals)" "tchdr" "Hdr "
add N "OCODEHDR ?" "ocodehdr" "Hdr "
add N "CG68HDR Everything for MCG" "CG68HDR" "Hdr "
add N "TCGHDR  Everything for LCG (?)" "TCGHDR" "Hdr "
add N "LCGHDR  Everything for LCG" "lcghdr" "Hdr "
add N "Mipmanhdr Mc Indep Part MANifest HeaDeR" "mipmanhdr" "Hdr?"
up
add Y "Command sequences"
down L
add N "Make     bcp, err, syn, trn" "s.make" "CMD "
add N "Make-bcp " "s.make-bcp" "CMD "
add N "Make-err " "s.make-err" "CMD "
add N "Make-syn " "s.make-syn" "CMD "
add N "Make-trn " "s.make-trn" "CMD "
add N "Make-mcg " "s.make-mcg" "CMD "
add N "Make-lcg " "s.make-lcg" "CMD "
add N "Make-ov  " "s.make-ov" "CMD "
add N "Bcp-bcp " "s.bcp-bcp" "CMD "
add N "Bcp-mst " "s.bcp-mst" "CMD "
add N "Bcp-err " "s.bcp-err" "CMD "
add N "Bcp-syn " "s.bcp-syn" "CMD "
add N "Bcp-trn " "s.bcp-trn" "CMD "
add N "Bcp-mcg " "s.bcp-mcg" "CMD "
add N "Bcp-lcg " "s.bcp-lcg" "CMD "
up
add N "Log of changes" "log" "Log "
up

./HADES END TRIPOS


